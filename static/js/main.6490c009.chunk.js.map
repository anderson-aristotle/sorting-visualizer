{"version":3,"sources":["Logic/helpers.js","Logic/sorts/mergeSort.js","Logic/sorts/insertionSort.js","Logic/sorts/index.js","Logic/sorts/bubbleSort.js","Logic/sorts/quickSort.js","Logic/sorts/heapSort.js","constants.js","Components/Visualizer/SubComponents/ArrayContainer.js","Components/Visualizer/SubComponents/SortingButtons.js","Components/Visualizer/SubComponents/SortingOptions.js","Components/Visualizer/SubComponents/CustomArrayOptions.js","Components/Visualizer/Visualizer.js","Components/CustomSlider/CustomSlider.js","Actions/settingsActions.js","Components/SettingsSideBar/SettingsSideBar.js","Components/App/App.js","serviceWorker.js","Reducers/settingsReducer.js","Reducers/rootReducer.js","Store/store.js","index.js"],"names":["generateRandomArray","size","min","max","array","_","times","push","Math","floor","random","randomIntFromInterval","normalizeString","name","str","toLowerCase","split","join","replace","v","toUpperCase","swap","indexA","indexB","Error","Array","isArray","temp","simulateMergeSort","unsortedArray","changes","length","middle","left","slice","right","index","copy","output","value","calculateSwap","splice","simulateMergeSortHelper","indexKey","change","itemToSwap","mostLeftItemToReplace","log","swapIndex","findIndex","item","uniqueKey","sorts","BUBBLE_SORT","isSorted","lastUnsorted","phases","i","MERGE_SORT","input","map","each","keysToFind","availableLeftIndex","replacedIndex","simulateMergeSortChanges","QUICK_SORT","quickSortHelper","startIndex","endIndex","pivotIndex","pivotValue","leftIndex","rightIndex","HEAP_SORT","INSERTION_SORT","indexStart","indexEnd","DEFAULTS","ArrayContainer","currentPhase","isValueVisible","className","key","style","height","width","SortingButtons","algorithms","handleSort","type","onClick","SortingOptions","options","text","CustomArrayOptions","onChange","onSubmit","placeholder","keys","Visualizer","props","generateNewPhase","clearTimeout","state","timeoutID","setState","cancelExecution","resetPhase","originalPhase","previousPhases","nextPhases","sortType","isSorting","onHandleHaltExecution","sortedArray","sortBy","isEqual","isAlreadySorted","values","convertedPhase","Number","sort","stepThroughPhases","oldPhase","oldNextPhases","oldPreviousPhases","delay","setTimeout","onHandleGoForwardOnePhase","oldCurrentPhase","onHandleGoBackOnePhase","pop","renderOptions","onHandleChange","e","customPhase","target","onHandleSubmit","event","preventDefault","JSON","parse","every","this","window","React","Component","connect","settings","CustomHandle","dragging","restProps","prefixCls","overlay","visible","placement","CustomSlider","handleAfterChange","attribute","rest","offset","defaultValue","handle","onAfterChange","GenerateCustomSlider","CustomComponent","customProps","SETTINGS_ACTIONS","SidebarContent","updateSize","updateDelay","toggleIsValueVisible","step","SettingsSideBar","onToggleSideBar","isOpen","sidebar","open","onSetOpen","styles","background","icon","faCog","children","dispatch","payload","App","Boolean","location","hostname","match","initialState","combineReducers","action","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","Application","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6490c009.chunk.js","sourcesContent":["import _ from 'lodash';\n\nexport const randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const generateRandomArray = (size, min, max) => {\n  const array = [];\n\n  _.times(size, () => {\n    array.push(randomIntFromInterval(min, max));\n  });\n\n  return array;\n};\n\nexport const isAlreadySorted = array => {\n  const sortedArray = _.sortBy([...array]);\n  const isSorted = _.isEqual(array, sortedArray);\n  return isSorted;\n};\n\nexport const normalizeString = name => {\n  // converts SCREAMING_SNAKE to 'Screaming Snake'\n  let str = name\n    .toLowerCase()\n    .split('_')\n    .join(' ');\n\n  str = str.replace(/\\b\\w/g, v => v.toUpperCase());\n  return str;\n};\n\nexport const swap = (indexA, indexB, array) => {\n  if (typeof indexA !== 'number' || typeof indexB !== 'number') {\n    throw new Error('argument indexA or indexB is not a number');\n  }\n\n  if (!Array.isArray(array)) {\n    throw new Error('argument array is not an array');\n  }\n\n  const temp = array[indexA];\n  array[indexA] = array[indexB];\n  array[indexB] = temp;\n};\n\nexport const convertValuesToNumbers = values => {\n  return _.map(values, value => Number(value));\n};\n","import _ from 'lodash';\nimport uniqueKey from 'unique-key';\nimport { swap } from '../helpers';\n\nexport const mergeSort = unsortedArray => {\n  const changes = [];\n  const input = _.map(unsortedArray, (value, index) => ({\n    value,\n    index,\n    uniqueKey: uniqueKey(),\n  }));\n  simulateMergeSort(input, changes);\n  const phases = simulateMergeSortChanges(changes, [...input]);\n\n  return phases;\n};\n\nfunction simulateMergeSort(unsortedArray, changes) {\n  // does a merge sort\n  // keep track of unique keys associated with each array element\n  // keeps track of specific sub array that merge sort is processing\n  // swaps on elements on the fly inside of sub array\n  // pushes changes onto changes\n  if (unsortedArray.length <= 1) {\n    return unsortedArray;\n  }\n\n  const middle = Math.floor(unsortedArray.length / 2);\n  const left = unsortedArray.slice(0, middle);\n  const right = unsortedArray.slice(middle);\n\n  return simulateMergeSortHelper(\n    simulateMergeSort(left, changes),\n    simulateMergeSort(right, changes),\n    changes,\n  );\n}\n\nfunction simulateMergeSortHelper(left, right, changes) {\n  // @todo: refactor while loop\n  const index = {\n    left: 0,\n    right: 0,\n    copy: 0,\n  };\n  const copy = [...left, ...right];\n  const output = [];\n\n  while (index.left < left.length && index.right < right.length) {\n    if (left[index.left].value < right[index.right].value) {\n      calculateSwap(left, copy, index, changes, 'left');\n      output.push(left[index.left]);\n      index.left++;\n    } else {\n      calculateSwap(right, copy, index, changes, 'right');\n      output.push(right[index.right]);\n      index.right++;\n    }\n  }\n\n  if (left.slice(index.left).length) {\n    const blank = copy.splice(\n      index.copy,\n      copy.length - index.copy,\n      left.slice(index.left),\n    );\n    simulateMergeSort(blank, changes);\n  }\n\n  if (right.slice(index.right).length) {\n    const blank = copy.splice(\n      index.copy,\n      copy.length - index.copy,\n      right.slice(index.right),\n    );\n    simulateMergeSort(blank, changes);\n  }\n\n  return [...output, ...left.slice(index.left), ...right.slice(index.right)];\n}\n\nfunction simulateMergeSortChanges(changes, array) {\n  const phases = [];\n  _.each(changes, change => {\n    // find corresponding item in array\n    const keysToFind = {\n      mostLeftItemToReplace: change.mostLeftItemToReplace.uniqueKey,\n      itemToSwap: change.itemToSwap.uniqueKey,\n    };\n\n    const availableLeftIndex = _.findIndex(\n      array,\n      item => item.uniqueKey === keysToFind.mostLeftItemToReplace,\n    );\n\n    const replacedIndex = _.findIndex(\n      array,\n      item => item.uniqueKey === keysToFind.itemToSwap,\n    );\n\n    swap(availableLeftIndex, replacedIndex, array);\n    phases.push([..._.map(array, ({ value }) => value)]);\n  });\n\n  return phases;\n}\n\nfunction calculateSwap(array, copy, index, changes, indexKey) {\n  const change = {\n    itemToSwap: array[index[indexKey]],\n    mostLeftItemToReplace: copy[index.copy],\n    log: `${indexKey}\\nswap ${array[index[indexKey]].value} at local index  ${\n      array[index[indexKey]].index\n    } \\nwith ${copy[index.copy].value} at copy index ${index.copy}`,\n  };\n\n  const swapIndex = _.findIndex(\n    copy,\n    item => item.uniqueKey === change.itemToSwap.uniqueKey,\n  );\n  swap(swapIndex, index.copy, copy);\n  changes.push(change);\n  index.copy++;\n}\n","import { swap } from '../helpers';\n\nexport const insertionSort = unsortedArray => {\n  const phases = [];\n  let indexStart = 1;\n  while (indexStart < unsortedArray.length) {\n    let indexEnd = indexStart;\n    while (\n      indexEnd > 0 &&\n      unsortedArray[indexEnd] < unsortedArray[indexEnd - 1]\n    ) {\n      swap(indexEnd, indexEnd - 1, unsortedArray);\n      indexEnd = indexEnd - 1;\n      phases.push([...unsortedArray]);\n    }\n    indexStart++;\n  }\n  return phases;\n};\n","import { bubbleSort } from './bubbleSort';\nimport { mergeSort } from './mergeSort';\nimport { insertionSort } from './insertionSort';\nimport { heapSort } from './heapSort';\nimport { quickSort } from './quickSort';\n\nexport const sorts = {\n  BUBBLE_SORT: bubbleSort,\n  MERGE_SORT: mergeSort,\n  QUICK_SORT: quickSort,\n  HEAP_SORT: heapSort,\n  INSERTION_SORT: insertionSort,\n};\n","import { swap } from '../helpers';\n\nexport const bubbleSort = unsortedArray => {\n  let isSorted = false;\n  let lastUnsorted = unsortedArray.length - 1;\n  const phases = [];\n  while (!isSorted) {\n    isSorted = true;\n    for (let i = 0; i < lastUnsorted; i++) {\n      if (unsortedArray[i] > unsortedArray[i + 1]) {\n        swap(i, i + 1, unsortedArray);\n        isSorted = false;\n        phases.push([...unsortedArray]);\n      }\n    }\n    lastUnsorted--;\n  }\n  return phases;\n};\n","// import _ from 'lodash';\nimport { swap } from '../helpers';\n\nconst quickSortHelper = (array, startIndex, endIndex, phases) => {\n  if (startIndex >= endIndex) {\n    return;\n  }\n\n  const pivotIndex = startIndex; // we choose pivot to always be the start index\n  const pivotValue = array[pivotIndex];\n  let leftIndex = startIndex + 1;\n  let rightIndex = endIndex;\n\n  while (rightIndex >= leftIndex) {\n    if (array[leftIndex] > pivotValue && array[rightIndex] < pivotValue) {\n      swap(leftIndex, rightIndex, array);\n      phases.push([...array]);\n    }\n\n    if (array[leftIndex] <= pivotValue) {\n      leftIndex++;\n    }\n\n    if (array[rightIndex] >= pivotValue) {\n      rightIndex--;\n    }\n  }\n\n  // we just swapped all values according to pivot\n  // swap pivot with right\n  swap(pivotIndex, rightIndex, array);\n  phases.push([...array]);\n\n  const isLeftSubArraySorted =\n    rightIndex - startIndex - 1 < endIndex - rightIndex + 1;\n\n  if (isLeftSubArraySorted) {\n    quickSortHelper(array, startIndex, rightIndex - 1, phases);\n    quickSortHelper(array, rightIndex + 1, endIndex, phases);\n  } else {\n    quickSortHelper(array, rightIndex + 1, endIndex, phases);\n    quickSortHelper(array, startIndex, rightIndex - 1, phases);\n  }\n};\n\nexport const quickSort = unsortedArray => {\n  const phases = [];\n  const startIndex = 0;\n  const endIndex = unsortedArray.length - 1;\n  quickSortHelper(unsortedArray, startIndex, endIndex, phases);\n  return phases;\n};\n","export const heapSort = unsortedArray => {\n  return [unsortedArray];\n};\n","export const DEFAULTS = {\n  HEIGHT_MULTIPLIER: 4,\n  INTERVAL_MAX: 100,\n  INTERVAL_MIN: 5,\n  WIDTH: 20,\n  SIZE: 15,\n  DELAY: 50,\n  IS_VALUE_VISIBLE: false,\n};\n","import React from 'react';\nimport { DEFAULTS } from '../../../constants';\n\nexport const ArrayContainer = ({ currentPhase, isValueVisible }) => {\n  return (\n    <div className=\"array-container\">\n      {currentPhase.map((value, index) => (\n        <div\n          key={index}\n          className=\"array-bar\"\n          style={{\n            height: `${value * DEFAULTS.HEIGHT_MULTIPLIER}px`,\n            width: `${DEFAULTS.WIDTH}px`,\n          }}\n        >\n          {isValueVisible && value}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\n\nexport const SortingButtons = ({ algorithms, normalizeString, handleSort }) => (\n  <div className=\"sort-options\">\n    {_.map(algorithms, (name, index) => {\n      return (\n        <button\n          key={index}\n          type=\"button\"\n          className=\"btn btn-success sort-button\"\n          onClick={() => handleSort(name)}\n        >\n          {normalizeString(name)}\n        </button>\n      );\n    })}\n  </div>\n);\n","import React from 'react';\nimport _ from 'lodash';\n\nexport const SortingOptions = ({ options }) => {\n  return (\n    <div className=\"sort-options\">\n      {_.map(options, ({ text, onClick, className }, index) => {\n        return (\n          <button\n            key={index}\n            className={`btn sort-button ${className}`}\n            type=\"button\"\n            onClick={onClick}\n          >\n            {text}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CustomArrayOptions = ({ value, onChange, onSubmit }) => {\n  return (\n    <form className=\"p-3\" onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a custom array\"\n        name=\"text\"\n        onChange={onChange}\n        value={value}\n      />\n      <input className=\"btn btn-secondary mx-3\" type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport './Visualizer.scss';\nimport { sorts } from '../../Logic/sorts';\nimport { DEFAULTS } from '../../constants';\nimport {\n  isAlreadySorted,\n  generateRandomArray,\n  normalizeString,\n  convertValuesToNumbers,\n} from '../../Logic/helpers';\nimport { connect } from 'react-redux';\nimport {\n  SortingButtons,\n  ArrayContainer,\n  SortingOptions,\n  CustomArrayOptions,\n} from './SubComponents/';\n\nconst algorithms = _.keys(sorts);\n\nclass Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cancelExecution: false,\n      isSorting: false,\n      currentPhase: [],\n      nextPhases: [],\n      previousPhases: [],\n      originalPhase: [],\n      timeoutID: null,\n      customPhase: '',\n    };\n  }\n\n  componentDidMount() {\n    this.generateNewPhase();\n  }\n\n  generateNewPhase = () => {\n    const { size } = this.props;\n    const currentPhase = generateRandomArray(\n      size,\n      DEFAULTS.INTERVAL_MIN,\n      DEFAULTS.INTERVAL_MAX,\n    );\n\n    clearTimeout(this.state.timeoutID);\n    this.setState({ currentPhase, cancelExecution: true });\n  };\n\n  resetPhase = () => {\n    const { originalPhase } = this.state;\n    this.setState({\n      currentPhase: originalPhase,\n      previousPhases: [],\n      nextPhases: [],\n    });\n  };\n\n  handleSort = sortType => {\n    const { currentPhase, isSorting } = this.state;\n\n    const originalPhase = currentPhase;\n\n    if (isSorting) {\n      this.onHandleHaltExecution();\n      this.setState({ nextPhases: [] });\n    }\n\n    if (isAlreadySorted(currentPhase)) {\n      return;\n    }\n\n    const convertedPhase = convertValuesToNumbers(currentPhase);\n    const sort = sorts[sortType];\n    const nextPhases = sort(convertedPhase);\n\n    this.setState(\n      { nextPhases, originalPhase, cancelExecution: false, isSorting: true },\n      this.stepThroughPhases,\n    );\n  };\n\n  stepThroughPhases = () => {\n    const {\n      currentPhase: oldPhase,\n      nextPhases: oldNextPhases,\n      previousPhases: oldPreviousPhases,\n    } = this.state;\n\n    const { delay } = this.props;\n\n    const [currentPhase, ...nextPhases] = oldNextPhases;\n    const previousPhases = [...oldPreviousPhases, oldPhase];\n\n    this.setState(\n      {\n        currentPhase,\n        nextPhases,\n        previousPhases,\n      },\n      () => {\n        if (this.state.nextPhases.length && !this.state.cancelExecution) {\n          const timeoutID = setTimeout(this.stepThroughPhases, delay);\n          this.setState({ timeoutID });\n        }\n      },\n    );\n  };\n\n  onHandleGoForwardOnePhase = () => {\n    const {\n      currentPhase: oldCurrentPhase,\n      nextPhases: oldNextPhases,\n      previousPhases: oldPreviousPhases,\n    } = this.state;\n\n    if (!oldNextPhases.length) {\n      return;\n    }\n\n    const [currentPhase, ...nextPhases] = oldNextPhases;\n    const previousPhases = [...oldPreviousPhases, oldCurrentPhase];\n\n    this.setState({\n      currentPhase,\n      nextPhases,\n      previousPhases,\n    });\n  };\n\n  onHandleGoBackOnePhase = () => {\n    const {\n      currentPhase: oldCurrentPhase,\n      previousPhases: oldPreviousPhases,\n      nextPhases: oldNextPhases,\n    } = this.state;\n\n    if (!oldPreviousPhases.length) {\n      return;\n    }\n\n    const currentPhase = oldPreviousPhases.pop();\n    const previousPhases = oldPreviousPhases;\n    const nextPhases = [oldCurrentPhase, ...oldNextPhases];\n\n    this.setState({ currentPhase, previousPhases, nextPhases });\n  };\n\n  onHandleHaltExecution = () => {\n    clearTimeout(this.state.timeoutID);\n    this.setState({ cancelExecution: true });\n  };\n\n  renderOptions = () => {\n    const options = [\n      {\n        text: 'Generate New Values',\n        className: 'btn-warning',\n        onClick: this.generateNewPhase,\n      },\n      {\n        text: 'Reset Values',\n        className: 'btn-warning',\n        onClick: this.resetPhase,\n      },\n      {\n        text: 'Go Forward',\n        className: 'btn-dark',\n        onClick: this.onHandleGoForwardOnePhase,\n      },\n      {\n        text: 'Go Back',\n        className: 'btn-dark',\n        onClick: this.onHandleGoBackOnePhase,\n      },\n      {\n        text: 'Halt Execution',\n        className: 'btn-danger',\n        onClick: this.onHandleHaltExecution,\n      },\n    ];\n\n    return options;\n  };\n\n  onHandleChange = e => {\n    this.setState({ customPhase: e.target.value });\n  };\n\n  onHandleSubmit = event => {\n    // allow [2,3,4] and 3,1,3 as valid inputs\n    event.preventDefault();\n    const { customPhase } = this.state;\n\n    let values;\n\n    try {\n      values = JSON.parse(customPhase);\n    } catch (e) {\n      values = customPhase.split(',');\n    }\n\n    if (_.every(values, Number)) {\n      this.setState({ currentPhase: values });\n    }\n  };\n\n  render() {\n    const { currentPhase, customPhase } = this.state;\n    const { isValueVisible } = this.props;\n\n    window.state = this.state;\n\n    return (\n      <div className=\"visualizer\">\n        <h1>Sorting Visualizer</h1>\n        <CustomArrayOptions\n          value={customPhase}\n          onChange={this.onHandleChange}\n          onSubmit={this.onHandleSubmit}\n        />\n        <SortingOptions options={this.renderOptions()} />\n        <SortingButtons\n          algorithms={algorithms}\n          normalizeString={normalizeString}\n          handleSort={this.handleSort}\n        />\n        <ArrayContainer\n          currentPhase={currentPhase}\n          isValueVisible={isValueVisible}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { settings } = state;\n  const { delay, size, isValueVisible } = settings;\n\n  return {\n    delay,\n    size,\n    isValueVisible,\n  };\n};\n\nexport default connect(mapStateToProps)(Visualizer);\n","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Slider, { Handle } from 'rc-slider';\nimport './CustomSlider.scss';\n\nexport const CustomHandle = ({ value, dragging, index, ...restProps }) => {\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport const CustomSlider = ({\n  value,\n  handleAfterChange,\n  attribute,\n  text,\n  offset,\n  ...rest\n}) => {\n  return (\n    <div className=\"custom-slider\">\n      <p>{text}</p>\n      <p>{value}</p>\n      <Slider\n        {...rest}\n        defaultValue={value}\n        handle={CustomHandle}\n        onAfterChange={value => handleAfterChange(value)}\n      />\n    </div>\n  );\n};\n\nexport const GenerateCustomSlider = ({\n  CustomComponent = CustomSlider,\n  ...customProps\n}) => {\n  return <CustomComponent {...customProps} />;\n};\n","export const SETTINGS_ACTIONS = {\n  UPDATE_DELAY: 'UPDATE_DELAY',\n  UPDATE_SIZE: 'UPDATE_SIZE',\n  TOGGLE_IS_VALUE_VISIBLE: 'TOGGLE_IS_VALUE_VISIBLE',\n};\n","import React from 'react';\nimport Sidebar from 'react-sidebar';\nimport { connect } from 'react-redux';\n// import _ from 'lodash';\nimport './SettingsSideBar.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { GenerateCustomSlider } from '../CustomSlider/CustomSlider';\nimport { SETTINGS_ACTIONS } from '../../Actions/actions';\n\nconst SidebarContent = ({\n  delay,\n  size,\n  updateSize,\n  updateDelay,\n  toggleIsValueVisible,\n}) => (\n  <div>\n    <h1>Settings</h1>\n    <GenerateCustomSlider\n      attribute=\"delay\"\n      handleAfterChange={updateDelay}\n      max={600}\n      min={5}\n      text=\"Sorting delay in milliseconds\"\n      value={delay}\n      step={5}\n    />\n    <GenerateCustomSlider\n      attribute=\"size\"\n      handleAfterChange={updateSize}\n      max={100}\n      min={5}\n      text=\"Number of columns for next array\"\n      value={size}\n    />\n    <button onClick={toggleIsValueVisible}>Toggle Values</button>\n  </div>\n);\n\nclass SettingsSideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  onToggleSideBar = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      delay,\n      size,\n      updateDelay,\n      updateSize,\n      toggleIsValueVisible,\n    } = this.props;\n\n    return (\n      <Sidebar\n        className=\"sidebar\"\n        sidebar={\n          <SidebarContent\n            delay={delay}\n            size={size}\n            updateDelay={updateDelay}\n            updateSize={updateSize}\n            toggleIsValueVisible={toggleIsValueVisible}\n          />\n        }\n        open={isOpen}\n        onSetOpen={this.onToggleSideBar}\n        styles={{ sidebar: { background: 'white' } }}\n      >\n        <div className=\"header\">\n          <button onClick={this.onToggleSideBar}>\n            <FontAwesomeIcon icon={faCog} />\n          </button>\n        </div>\n        {this.props.children}\n      </Sidebar>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { settings } = state;\n  return {\n    delay: settings.delay,\n    size: settings.size,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSize: size => {\n      dispatch({ type: SETTINGS_ACTIONS.UPDATE_SIZE, payload: size });\n    },\n    updateDelay: delay => {\n      dispatch({ type: SETTINGS_ACTIONS.UPDATE_DELAY, payload: delay });\n    },\n    toggleIsValueVisible: () => {\n      dispatch({ type: SETTINGS_ACTIONS.TOGGLE_IS_VALUE_VISIBLE });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsSideBar);\n","import React from 'react';\nimport './App.css';\nimport Visualizer from '../Visualizer/Visualizer';\nimport SettingSideBar from '../SettingsSideBar/SettingsSideBar';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SettingSideBar>\n        <Visualizer />\n      </SettingSideBar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SETTINGS_ACTIONS } from '../Actions/actions';\nimport { DEFAULTS } from '../constants';\n\nconst initialState = {\n  size: DEFAULTS.SIZE,\n  delay: DEFAULTS.DELAY,\n  isValueVisible: DEFAULTS.IS_VALUE_VISIBLE,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SETTINGS_ACTIONS.UPDATE_SIZE:\n      return {\n        ...state,\n        size: action.payload,\n      };\n    case SETTINGS_ACTIONS.UPDATE_DELAY:\n      return {\n        ...state,\n        delay: action.payload,\n      };\n    case SETTINGS_ACTIONS.TOGGLE_IS_VALUE_VISIBLE:\n      return {\n        ...state,\n        isValueVisible: !state.isValueVisible,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport settings from './settingsReducer';\n\nexport default combineReducers({\n  settings,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../Reducers/rootReducer';\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleWare),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './Store/store';\n\nconst Application = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(Application, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}