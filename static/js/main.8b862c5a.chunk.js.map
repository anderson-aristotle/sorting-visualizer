{"version":3,"sources":["Components/Pages/ContributorsPage.js","Logic/helpers.js","Logic/sorts/mergeSort.js","Logic/sorts/insertionSort.js","Logic/sorts/index.js","Logic/sorts/bubbleSort.js","Logic/sorts/quickSort.js","Logic/sorts/heapSort.js","constants.js","Components/Visualizer/SubComponents/ArrayContainer.js","Components/Visualizer/SubComponents/SortingButtons.js","Components/Visualizer/SubComponents/SortingOptions.js","Components/Visualizer/SubComponents/CustomArrayOptions.js","Components/Visualizer/Visualizer.js","Components/CustomSlider/CustomSlider.js","Actions/settingsActions.js","Components/SettingsSideBar/SettingsSideBar.js","Components/Pages/MainPage.js","Components/App/Routes.js","Components/Main/Footer.js","Components/Main/Header.js","Components/App/App.js","serviceWorker.js","Reducers/settingsReducer.js","Reducers/rootReducer.js","Store/store.js","index.js"],"names":["ContributorsPage","generateRandomArray","size","min","max","array","_","times","push","Math","floor","random","randomIntFromInterval","isSorted","sortedArray","sortBy","isEqual","normalizeString","name","str","toLowerCase","split","join","replace","v","toUpperCase","swap","indexA","indexB","Error","Array","isArray","temp","simulateMergeSort","unsortedArray","changes","length","middle","left","slice","right","index","copy","output","value","calculateSwap","splice","simulateMergeSortHelper","indexKey","change","itemToSwap","mostLeftItemToReplace","log","uniqueKey","swapIndex","findIndex","item","sorts","BUBBLE_SORT","lastUnsorted","phases","i","MERGE_SORT","input","map","each","keysToFind","availableLeftIndex","replacedIndex","simulateMergeSortChanges","QUICK_SORT","quickSortHelper","startIndex","endIndex","pivotIndex","pivotValue","leftIndex","rightIndex","HEAP_SORT","INSERTION_SORT","indexStart","indexEnd","DEFAULTS","ArrayContainer","currentPhase","isValueVisible","className","key","style","height","width","SortingButtons","algorithms","handleSort","type","onClick","SortingOptions","options","text","disabled","CustomArrayOptions","onChange","onSubmit","placeholder","keys","Visualizer","props","generateNewPhase","clearTimeout","state","timeoutID","setState","cancelExecution","restorePhase","originalPhase","previousPhases","nextPhases","sortType","isSorting","onHandleHaltExecution","values","convertedPhase","Number","sort","stepThroughPhases","oldPhase","oldNextPhases","oldPreviousPhases","delay","setTimeout","onHandleGoForwardOnePhase","oldCurrentPhase","onHandleGoBackOnePhase","pop","renderOptions","onHandleChange","e","customPhase","target","onHandleSubmit","event","preventDefault","JSON","parse","every","window","vis","this","isCorrect","React","Component","connect","settings","CustomHandle","dragging","restProps","prefixCls","overlay","visible","placement","CustomSlider","handleAfterChange","attribute","rest","offset","defaultValue","handle","onAfterChange","GenerateCustomSlider","CustomComponent","customProps","SETTINGS_ACTIONS","SettingsSideBar","updateDelay","updateSize","toggleIsValueVisible","step","checked","dispatch","payload","MainPage","Routes","exact","path","component","Footer","Header","App","Boolean","location","hostname","match","initialState","combineReducers","action","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","Application","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b862c5a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ContributorsPage = () => {\n  return <span>10</span>;\n};\n","import _ from 'lodash';\n\nexport const randomIntFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const generateRandomArray = (size, min, max) => {\n  const array = [];\n\n  _.times(size, () => {\n    array.push(randomIntFromInterval(min, max));\n  });\n\n  return array;\n};\n\nexport const isSorted = array => {\n  const sortedArray = _.sortBy([...array]);\n  const isPossiblySorted = _.isEqual(array, sortedArray);\n  return isPossiblySorted;\n};\n\nexport const normalizeString = name => {\n  // converts SCREAMING_SNAKE to 'Screaming Snake'\n  let str = name\n    .toLowerCase()\n    .split('_')\n    .join(' ');\n\n  str = str.replace(/\\b\\w/g, v => v.toUpperCase());\n  return str;\n};\n\nexport const swap = (indexA, indexB, array) => {\n  if (typeof indexA !== 'number' || typeof indexB !== 'number') {\n    throw new Error('argument indexA or indexB is not a number');\n  }\n\n  if (!Array.isArray(array)) {\n    throw new Error('argument array is not an array');\n  }\n\n  const temp = array[indexA];\n  array[indexA] = array[indexB];\n  array[indexB] = temp;\n};\n\nexport const convertValuesToNumbers = values => {\n  return _.map(values, value => Number(value));\n};\n","import _ from 'lodash';\nimport uniqueKey from 'unique-key';\nimport { swap } from '../helpers';\n\nexport const mergeSort = unsortedArray => {\n  const changes = [];\n  const input = _.map(unsortedArray, (value, index) => ({\n    value,\n    index,\n    uniqueKey: uniqueKey(),\n  }));\n  simulateMergeSort(input, changes);\n  const phases = simulateMergeSortChanges(changes, [...input]);\n\n  return phases;\n};\n\nfunction simulateMergeSort(unsortedArray, changes) {\n  // does a merge sort\n  // keep track of unique keys associated with each array element\n  // keeps track of specific sub array that merge sort is processing\n  // swaps on elements on the fly inside of sub array\n  // pushes changes onto changes\n  if (unsortedArray.length <= 1) {\n    return unsortedArray;\n  }\n\n  const middle = Math.floor(unsortedArray.length / 2);\n  const left = unsortedArray.slice(0, middle);\n  const right = unsortedArray.slice(middle);\n\n  return simulateMergeSortHelper(\n    simulateMergeSort(left, changes),\n    simulateMergeSort(right, changes),\n    changes,\n  );\n}\n\nfunction simulateMergeSortHelper(left, right, changes) {\n  // @todo: refactor while loop\n  const index = {\n    left: 0,\n    right: 0,\n    copy: 0,\n  };\n  const copy = [...left, ...right];\n  const output = [];\n\n  while (index.left < left.length && index.right < right.length) {\n    if (left[index.left].value < right[index.right].value) {\n      calculateSwap(left, copy, index, changes, 'left');\n      output.push(left[index.left]);\n      index.left++;\n    } else {\n      calculateSwap(right, copy, index, changes, 'right');\n      output.push(right[index.right]);\n      index.right++;\n    }\n  }\n\n  if (left.slice(index.left).length) {\n    const blank = copy.splice(\n      index.copy,\n      copy.length - index.copy,\n      left.slice(index.left),\n    );\n    simulateMergeSort(blank, changes);\n  }\n\n  if (right.slice(index.right).length) {\n    const blank = copy.splice(\n      index.copy,\n      copy.length - index.copy,\n      right.slice(index.right),\n    );\n    simulateMergeSort(blank, changes);\n  }\n\n  return [...output, ...left.slice(index.left), ...right.slice(index.right)];\n}\n\nfunction simulateMergeSortChanges(changes, array) {\n  const phases = [];\n  _.each(changes, change => {\n    // find corresponding item in array\n    const keysToFind = {\n      mostLeftItemToReplace: change.mostLeftItemToReplace.uniqueKey,\n      itemToSwap: change.itemToSwap.uniqueKey,\n    };\n\n    const availableLeftIndex = _.findIndex(\n      array,\n      item => item.uniqueKey === keysToFind.mostLeftItemToReplace,\n    );\n\n    const replacedIndex = _.findIndex(\n      array,\n      item => item.uniqueKey === keysToFind.itemToSwap,\n    );\n\n    swap(availableLeftIndex, replacedIndex, array);\n    phases.push([..._.map(array, ({ value }) => value)]);\n  });\n\n  return phases;\n}\n\nfunction calculateSwap(array, copy, index, changes, indexKey) {\n  const change = {\n    itemToSwap: array[index[indexKey]],\n    mostLeftItemToReplace: copy[index.copy],\n    log: `${indexKey}\\nswap ${array[index[indexKey]].value} at local index  ${\n      array[index[indexKey]].index\n    } \\nwith ${copy[index.copy].value} at copy index ${index.copy}`,\n  };\n\n  if (change.itemToSwap.uniqueKey !== change.mostLeftItemToReplace.uniqueKey) {\n    const swapIndex = _.findIndex(\n      copy,\n      item => item.uniqueKey === change.itemToSwap.uniqueKey,\n    );\n    swap(swapIndex, index.copy, copy);\n    changes.push(change);\n  }\n  index.copy++;\n}\n","import { swap } from '../helpers';\n\nexport const insertionSort = unsortedArray => {\n  const phases = [];\n  let indexStart = 1;\n  while (indexStart < unsortedArray.length) {\n    let indexEnd = indexStart;\n    while (\n      indexEnd > 0 &&\n      unsortedArray[indexEnd] < unsortedArray[indexEnd - 1]\n    ) {\n      swap(indexEnd, indexEnd - 1, unsortedArray);\n      indexEnd = indexEnd - 1;\n      phases.push([...unsortedArray]);\n    }\n    indexStart++;\n  }\n  return phases;\n};\n","import { bubbleSort } from './bubbleSort';\nimport { mergeSort } from './mergeSort';\nimport { insertionSort } from './insertionSort';\nimport { heapSort } from './heapSort';\nimport { quickSort } from './quickSort';\n\nexport const sorts = {\n  BUBBLE_SORT: bubbleSort,\n  MERGE_SORT: mergeSort,\n  QUICK_SORT: quickSort,\n  HEAP_SORT: heapSort,\n  INSERTION_SORT: insertionSort,\n};\n","import { swap } from '../helpers';\n\nexport const bubbleSort = unsortedArray => {\n  let isSorted = false;\n  let lastUnsorted = unsortedArray.length - 1;\n  const phases = [];\n  while (!isSorted) {\n    isSorted = true;\n    for (let i = 0; i < lastUnsorted; i++) {\n      if (unsortedArray[i] > unsortedArray[i + 1]) {\n        swap(i, i + 1, unsortedArray);\n        isSorted = false;\n        phases.push([...unsortedArray]);\n      }\n    }\n    lastUnsorted--;\n  }\n  return phases;\n};\n","// import _ from 'lodash';\nimport { swap } from '../helpers';\n\nconst quickSortHelper = (array, startIndex, endIndex, phases) => {\n  if (startIndex >= endIndex) {\n    return;\n  }\n\n  const pivotIndex = startIndex; // we choose pivot to always be the start index\n  const pivotValue = array[pivotIndex];\n  let leftIndex = startIndex + 1;\n  let rightIndex = endIndex;\n\n  while (rightIndex >= leftIndex) {\n    if (array[leftIndex] > pivotValue && array[rightIndex] < pivotValue) {\n      swap(leftIndex, rightIndex, array);\n      phases.push([...array]);\n    }\n\n    if (array[leftIndex] <= pivotValue) {\n      leftIndex++;\n    }\n\n    if (array[rightIndex] >= pivotValue) {\n      rightIndex--;\n    }\n  }\n\n  // we just swapped all values according to pivot\n  // swap pivot with right\n  swap(pivotIndex, rightIndex, array);\n  phases.push([...array]);\n\n  const isLeftSubArraySorted =\n    rightIndex - startIndex - 1 < endIndex - rightIndex + 1;\n\n  if (isLeftSubArraySorted) {\n    quickSortHelper(array, startIndex, rightIndex - 1, phases);\n    quickSortHelper(array, rightIndex + 1, endIndex, phases);\n  } else {\n    quickSortHelper(array, rightIndex + 1, endIndex, phases);\n    quickSortHelper(array, startIndex, rightIndex - 1, phases);\n  }\n};\n\nexport const quickSort = unsortedArray => {\n  const phases = [];\n  const startIndex = 0;\n  const endIndex = unsortedArray.length - 1;\n  quickSortHelper(unsortedArray, startIndex, endIndex, phases);\n  return phases;\n};\n","export const heapSort = unsortedArray => {\n  return [unsortedArray];\n};\n","export const DEFAULTS = {\n  HEIGHT_MULTIPLIER: 4,\n  INTERVAL_MAX: 100,\n  INTERVAL_MIN: 5,\n  WIDTH: 20,\n  SIZE: 15,\n  DELAY: 50,\n  IS_VALUE_VISIBLE: false,\n};\n","import React from 'react';\nimport { DEFAULTS } from '../../../constants';\n\nexport const ArrayContainer = ({ currentPhase, isValueVisible }) => {\n  return (\n    <div className=\"array-container\">\n      {currentPhase.map((value, index) => (\n        <div\n          key={index}\n          className=\"array-bar\"\n          style={{\n            height: `${value * DEFAULTS.HEIGHT_MULTIPLIER}px`,\n            width: `${DEFAULTS.WIDTH}px`,\n          }}\n        >\n          {isValueVisible && value}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\n\nexport const SortingButtons = ({ algorithms, normalizeString, handleSort }) => (\n  <div className=\"sort-options\">\n    {_.map(algorithms, (name, index) => {\n      return (\n        <button\n          key={index}\n          type=\"button\"\n          className=\"btn btn-success sort-button\"\n          onClick={() => handleSort(name)}\n        >\n          {normalizeString(name)}\n        </button>\n      );\n    })}\n  </div>\n);\n","import React from 'react';\nimport _ from 'lodash';\n\nexport const SortingOptions = ({ options }) => {\n  return (\n    <div className=\"sort-options\">\n      {_.map(options, ({ text, onClick, className, disabled }, index) => {\n        return (\n          <button\n            key={index}\n            className={`btn sort-button ${className}`}\n            type=\"button\"\n            onClick={onClick}\n            disabled={disabled}\n          >\n            {text}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CustomArrayOptions = ({ value, onChange, onSubmit }) => {\n  return (\n    <form className=\"p-3\" onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a custom array\"\n        name=\"text\"\n        onChange={onChange}\n        value={value}\n      />\n      <input className=\"btn btn-secondary mx-3\" type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport './Visualizer.scss';\nimport { sorts } from '../../Logic/sorts';\nimport { DEFAULTS } from '../../constants';\nimport {\n  isSorted,\n  generateRandomArray,\n  normalizeString,\n  convertValuesToNumbers,\n} from '../../Logic/helpers';\nimport { connect } from 'react-redux';\nimport {\n  SortingButtons,\n  ArrayContainer,\n  SortingOptions,\n  CustomArrayOptions,\n} from './SubComponents/';\n\nconst algorithms = _.keys(sorts);\n\nclass Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cancelExecution: false,\n      isSorting: false,\n      currentPhase: [],\n      nextPhases: [],\n      previousPhases: [],\n      originalPhase: [],\n      timeoutID: null,\n      customPhase: '',\n    };\n\n    window.vis = this;\n  }\n\n  componentDidMount() {\n    this.generateNewPhase();\n  }\n\n  generateNewPhase = () => {\n    const { size } = this.props;\n    const currentPhase = generateRandomArray(\n      size,\n      DEFAULTS.INTERVAL_MIN,\n      DEFAULTS.INTERVAL_MAX,\n    );\n\n    clearTimeout(this.state.timeoutID);\n    this.setState({ currentPhase, cancelExecution: true });\n  };\n\n  restorePhase = () => {\n    const { originalPhase } = this.state;\n\n    if (!originalPhase.length) {\n      return;\n    }\n\n    this.setState({\n      currentPhase: originalPhase,\n      previousPhases: [],\n      nextPhases: [],\n    });\n  };\n\n  handleSort = sortType => {\n    const { currentPhase, isSorting } = this.state;\n\n    const originalPhase = currentPhase;\n\n    if (isSorting) {\n      this.onHandleHaltExecution();\n      this.setState({ nextPhases: [] });\n    }\n\n    if (isSorted(currentPhase)) {\n      return;\n    }\n\n    const convertedPhase = convertValuesToNumbers(currentPhase);\n    const sort = sorts[sortType];\n    const nextPhases = sort(convertedPhase);\n\n    this.setState(\n      { nextPhases, originalPhase, cancelExecution: false, isSorting: true },\n      this.stepThroughPhases,\n    );\n  };\n\n  stepThroughPhases = () => {\n    const {\n      currentPhase: oldPhase,\n      nextPhases: oldNextPhases,\n      previousPhases: oldPreviousPhases,\n    } = this.state;\n\n    const { delay } = this.props;\n\n    const [currentPhase, ...nextPhases] = oldNextPhases;\n    const previousPhases = [...oldPreviousPhases, oldPhase];\n\n    this.setState(\n      {\n        currentPhase,\n        nextPhases,\n        previousPhases,\n      },\n      () => {\n        if (this.state.nextPhases.length && !this.state.cancelExecution) {\n          const timeoutID = setTimeout(this.stepThroughPhases, delay);\n          this.setState({ timeoutID });\n        }\n      },\n    );\n  };\n\n  onHandleGoForwardOnePhase = () => {\n    const {\n      currentPhase: oldCurrentPhase,\n      nextPhases: oldNextPhases,\n      previousPhases: oldPreviousPhases,\n    } = this.state;\n\n    if (!oldNextPhases.length) {\n      return;\n    }\n\n    const [currentPhase, ...nextPhases] = oldNextPhases;\n    const previousPhases = [...oldPreviousPhases, oldCurrentPhase];\n\n    this.setState({\n      currentPhase,\n      nextPhases,\n      previousPhases,\n    });\n  };\n\n  onHandleGoBackOnePhase = () => {\n    const {\n      currentPhase: oldCurrentPhase,\n      previousPhases: oldPreviousPhases,\n      nextPhases: oldNextPhases,\n    } = this.state;\n\n    if (!oldPreviousPhases.length) {\n      return;\n    }\n\n    const currentPhase = oldPreviousPhases.pop();\n    const previousPhases = oldPreviousPhases;\n    const nextPhases = [oldCurrentPhase, ...oldNextPhases];\n\n    this.setState({ currentPhase, previousPhases, nextPhases });\n  };\n\n  onHandleHaltExecution = () => {\n    clearTimeout(this.state.timeoutID);\n    this.setState({ cancelExecution: true });\n  };\n\n  renderOptions = () => {\n    const { isSorting, nextPhases, previousPhases, originalPhase } = this.state;\n\n    const options = [\n      {\n        text: 'Generate New Values',\n        className: 'btn-warning',\n        onClick: this.generateNewPhase,\n      },\n      {\n        text: 'Restore Values',\n        className: 'btn-warning',\n        onClick: this.restorePhase,\n        disabled: !originalPhase.length,\n      },\n      {\n        text: 'Go Forward',\n        className: 'btn-dark',\n        onClick: this.onHandleGoForwardOnePhase,\n        disabled: !isSorting && !nextPhases.length,\n      },\n      {\n        text: 'Go Back',\n        className: 'btn-dark',\n        onClick: this.onHandleGoBackOnePhase,\n        disabled: !isSorting && !previousPhases.length,\n      },\n      {\n        text: 'Halt Execution',\n        className: 'btn-danger',\n        onClick: this.onHandleHaltExecution,\n        disabled: !isSorting,\n      },\n    ];\n\n    return options;\n  };\n\n  onHandleChange = e => {\n    this.setState({ customPhase: e.target.value });\n  };\n\n  onHandleSubmit = event => {\n    // allow [2,3,4] and 3,1,3 as valid inputs\n    event.preventDefault();\n    const { customPhase } = this.state;\n\n    let values;\n\n    try {\n      values = JSON.parse(customPhase);\n    } catch (e) {\n      values = customPhase.split(',');\n    }\n\n    if (_.every(values, Number)) {\n      this.setState({ currentPhase: values });\n    }\n  };\n\n  render() {\n    const { currentPhase, customPhase } = this.state;\n    const { isValueVisible } = this.props;\n\n    const isCorrect = isSorted(currentPhase);\n\n    return (\n      <div className=\"visualizer\">\n        <div\n          className={isCorrect ? 'btn-success' : 'btn-danger'}\n          style={{ width: '50px', height: '50px' }}\n        >\n          {isCorrect}\n        </div>\n        <CustomArrayOptions\n          value={customPhase}\n          onChange={this.onHandleChange}\n          onSubmit={this.onHandleSubmit}\n        />\n        <SortingOptions options={this.renderOptions()} />\n        <SortingButtons\n          algorithms={algorithms}\n          normalizeString={normalizeString}\n          handleSort={this.handleSort}\n        />\n        <ArrayContainer\n          currentPhase={currentPhase}\n          isValueVisible={isValueVisible}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { settings } = state;\n  const { delay, size, isValueVisible } = settings;\n\n  return {\n    delay,\n    size,\n    isValueVisible,\n  };\n};\n\nexport default connect(mapStateToProps)(Visualizer);\n","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Slider, { Handle } from 'rc-slider';\nimport './CustomSlider.scss';\n\nexport const CustomHandle = ({ value, dragging, index, ...restProps }) => {\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport const CustomSlider = ({\n  value,\n  handleAfterChange,\n  attribute,\n  text,\n  offset,\n  ...rest\n}) => {\n  return (\n    <div className=\"custom-slider\">\n      <p>{text}</p>\n      <p>{value}</p>\n      <Slider\n        {...rest}\n        defaultValue={value}\n        handle={CustomHandle}\n        onAfterChange={value => handleAfterChange(value)}\n      />\n    </div>\n  );\n};\n\nexport const GenerateCustomSlider = ({\n  CustomComponent = CustomSlider,\n  ...customProps\n}) => {\n  return <CustomComponent {...customProps} />;\n};\n","export const SETTINGS_ACTIONS = {\n  UPDATE_DELAY: 'UPDATE_DELAY',\n  UPDATE_SIZE: 'UPDATE_SIZE',\n  TOGGLE_IS_VALUE_VISIBLE: 'TOGGLE_IS_VALUE_VISIBLE',\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import _ from 'lodash';\nimport './SettingsSideBar.scss';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { GenerateCustomSlider } from '../CustomSlider/CustomSlider';\nimport { SETTINGS_ACTIONS } from '../../Actions/actions';\nimport Switch from 'react-switch';\n\nclass SettingsSideBar extends React.Component {\n  render() {\n    const {\n      delay,\n      size,\n      updateDelay,\n      updateSize,\n      toggleIsValueVisible,\n      isValueVisible,\n    } = this.props;\n\n    return (\n      <div className=\"sidebar\">\n        <h3>Settings</h3>\n        <GenerateCustomSlider\n          attribute=\"delay\"\n          handleAfterChange={updateDelay}\n          max={600}\n          min={5}\n          text=\"Sorting delay in milliseconds\"\n          value={delay}\n          step={5}\n        />\n        <GenerateCustomSlider\n          attribute=\"size\"\n          handleAfterChange={updateSize}\n          max={100}\n          min={5}\n          text=\"Number of columns for next array\"\n          value={size}\n        />\n        <label>\n          <span>Toggle Values</span>\n          <Switch\n            className=\"react-switch\"\n            onChange={toggleIsValueVisible}\n            checked={isValueVisible}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { settings } = state;\n  const { delay, size, isValueVisible } = settings;\n  return {\n    delay,\n    size,\n    isValueVisible,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateSize: size => {\n      dispatch({ type: SETTINGS_ACTIONS.UPDATE_SIZE, payload: size });\n    },\n    updateDelay: delay => {\n      dispatch({ type: SETTINGS_ACTIONS.UPDATE_DELAY, payload: delay });\n    },\n    toggleIsValueVisible: () => {\n      dispatch({ type: SETTINGS_ACTIONS.TOGGLE_IS_VALUE_VISIBLE });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsSideBar);\n","import React from 'react';\nimport Visualizer from '../Visualizer/Visualizer';\nimport SettingSideBar from '../SettingsSideBar/SettingsSideBar';\nimport './MainPage.scss';\n\nexport const MainPage = () => {\n  return (\n    <div className=\"main-page-content\">\n      <SettingSideBar />\n      <Visualizer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './Routes.scss';\nimport { MainPage, ContributorsPage } from '../Pages';\n\nexport const Routes = () => {\n  return (\n    <div className=\"page\">\n      <Route exact path=\"/\" component={MainPage} />\n      <Route exact path=\"/contributors\" component={ContributorsPage} />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n  return <div></div>;\n};\n","import React from 'react';\nimport './Header.scss';\n\nexport const Header = () => {\n  return <header className=\"header\">Sorting Visualizer</header>;\n};\n","import React from 'react';\nimport './App.scss';\nimport { Routes } from './Routes';\nimport { Header, Footer } from '../Main';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Routes />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SETTINGS_ACTIONS } from '../Actions/actions';\nimport { DEFAULTS } from '../constants';\n\nconst initialState = {\n  size: DEFAULTS.SIZE,\n  delay: DEFAULTS.DELAY,\n  isValueVisible: DEFAULTS.IS_VALUE_VISIBLE,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SETTINGS_ACTIONS.UPDATE_SIZE:\n      return {\n        ...state,\n        size: action.payload,\n      };\n    case SETTINGS_ACTIONS.UPDATE_DELAY:\n      return {\n        ...state,\n        delay: action.payload,\n      };\n    case SETTINGS_ACTIONS.TOGGLE_IS_VALUE_VISIBLE:\n      return {\n        ...state,\n        isValueVisible: !state.isValueVisible,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport settings from './settingsReducer';\n\nexport default combineReducers({\n  settings,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../Reducers/rootReducer';\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleWare),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './Store/store';\nimport { HashRouter } from 'react-router-dom';\n\nconst Application = (\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n);\n\nReactDOM.render(Application, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}